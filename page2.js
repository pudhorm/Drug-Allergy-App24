// page2.js
(function () {
  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏ß‡∏°
  if (!window.drugAllergyData) window.drugAllergyData = {};
  if (!window.drugAllergyData.page2) window.drugAllergyData.page2 = {};

  // ---------------- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö (‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1) ----------------
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏µ‡∏£‡∏≤‡∏¢‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏≠‡∏±‡∏ô‡πÄ‡∏•‡∏¢
  const FEATURE_GROUPS = [
    {
      key: "resp",
      title: "1. ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏≤‡∏¢‡πÉ‡∏à",
      emoji: "ü´Å",
      bg: "linear-gradient(90deg, rgba(254, 242, 242, 0.95), rgba(254, 226, 226, 1))",
      border: "rgba(248, 113, 113, .4)",
      inputBorder: "rgba(248,113,113,.5)",
      items: [
        // ‡∏•‡∏ö "‡πÄ‡∏à‡πá‡∏ö‡∏Ñ‡∏≠" ‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß
        "‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ß‡∏µ‡πä‡∏î",
        "‡∏´‡∏≠‡∏ö‡πÄ‡∏´‡∏ô‡∏∑‡πà‡∏≠‡∏¢/‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡∏≥‡∏ö‡∏≤‡∏Å (RR>21 ‡∏´‡∏£‡∏∑‡∏≠ HR>100 ‡∏´‡∏£‡∏∑‡∏≠ SpO2<94%)",
        "‡πÑ‡∏≠",
        "‡∏°‡∏µ‡πÄ‡∏™‡∏°‡∏´‡∏∞",
        "‡πÑ‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î",
        "‡∏ñ‡∏∏‡∏á‡∏•‡∏°‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å",
        "‡πÑ‡∏°‡πà‡∏û‡∏ö"
      ]
    },
    {
      key: "cv",
      title: "2. ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏´‡∏•‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï",
      emoji: "‚ù§Ô∏è",
      bg: "linear-gradient(90deg, rgba(255, 244, 230, 0.95), rgba(255, 224, 178, 1))",
      border: "rgba(251, 146, 60, .4)",
      inputBorder: "rgba(251,146,60,.55)",
      items: [
        "‡πÄ‡∏à‡πá‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏Å",
        "‡πÉ‡∏à‡∏™‡∏±‡πà‡∏ô",
        "BP ‡∏ï‡πà‡∏≥ (<90/60)",
        "HR ‡∏™‡∏π‡∏á (>100)",
        "‡∏´‡∏ô‡πâ‡∏≤‡∏°‡∏∑‡∏î/‡∏´‡∏°‡∏î‡∏™‡∏ï‡∏¥",
        "‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏à‡∏≤‡∏á",
        "‡∏ã‡∏µ‡∏î",
        "‡πÑ‡∏°‡πà‡∏û‡∏ö"
      ]
    },
    {
      key: "gi",
      title: "3. ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
      emoji: "üçΩÔ∏è",
      bg: "linear-gradient(90deg, rgba(255, 250, 230, 0.95), rgba(255, 238, 186, 1))",
      border: "rgba(234, 179, 8, .4)",
      inputBorder: "rgba(234,179,8,.6)",
      items: [
        "‡∏Ñ‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏™‡πâ/‡∏≠‡∏≤‡πÄ‡∏à‡∏µ‡∏¢‡∏ô",
        "‡∏Å‡∏•‡∏∑‡∏ô‡∏•‡∏≥‡∏ö‡∏≤‡∏Å",
        "‡∏ó‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢",
        "‡∏õ‡∏ß‡∏î‡∏ö‡∏¥‡∏î‡∏ó‡πâ‡∏≠‡∏á",
        "‡πÄ‡∏ö‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
        "‡∏î‡∏µ‡∏ã‡πà‡∏≤‡∏ô (‡∏ï‡∏±‡∏ß‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á/‡∏ï‡∏≤‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á)",
        "‡∏õ‡∏ß‡∏î‡πÅ‡∏ô‡πà‡∏ô‡∏ä‡∏≤‡∏¢‡πÇ‡∏Ñ‡∏£‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤",
        "‡πÄ‡∏´‡∏á‡∏∑‡∏≠‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å",
        "‡πÅ‡∏ú‡∏•‡πÉ‡∏ô‡∏õ‡∏≤‡∏Å",
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å‡πÉ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£",
        "‡πÑ‡∏°‡πà‡∏û‡∏ö"
      ]
    },
    {
      key: "msk",
      title: "4. ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏î‡∏π‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠",
      emoji: "ü¶¥",
      bg: "linear-gradient(90deg, rgba(236, 252, 203, 0.95), rgba(217, 249, 157, 1))",
      border: "rgba(132, 204, 22, .4)",
      inputBorder: "rgba(132,204,22,.6)",
      items: ["‡∏õ‡∏ß‡∏î‡∏Ç‡πâ‡∏≠", "‡∏Ç‡πâ‡∏≠‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö", "‡∏õ‡∏ß‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠", "‡πÑ‡∏°‡πà‡∏û‡∏ö"]
    },
    {
      key: "eye",
      title: "5. ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô",
      emoji: "üëÅÔ∏è",
      bg: "linear-gradient(90deg, rgba(239, 246, 255, 0.95), rgba(219, 234, 254, 1))",
      border: "rgba(59, 130, 246, .35)",
      inputBorder: "rgba(59,130,246,.55)",
      items: ["‡πÄ‡∏¢‡∏∑‡πà‡∏≠‡∏ö‡∏∏‡∏ï‡∏≤‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö (‡∏ï‡∏≤‡πÅ‡∏î‡∏á)", "‡πÅ‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡∏ï‡∏≤", "‡πÑ‡∏°‡πà‡∏û‡∏ö"]
    },
    {
      key: "gu",
      title: "6. ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏ö‡∏ñ‡πà‡∏≤‡∏¢",
      emoji: "üöΩ",
      bg: "linear-gradient(90deg, rgba(224, 242, 254, 0.95), rgba(186, 230, 253, 1))",
      border: "rgba(14, 165, 233, .35)",
      inputBorder: "rgba(14,165,233,.55)",
      items: [
        "‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏™‡∏µ‡∏ä‡∏≤/‡∏™‡∏µ‡∏î‡∏≥",
        "‡∏õ‡∏ß‡∏î‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏≠‡∏ß",
        "‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏≠‡∏≠‡∏Å‡∏ô‡πâ‡∏≠‡∏¢",
        "‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏™‡∏µ‡∏Ç‡∏∏‡πà‡∏ô",
        "‡πÑ‡∏°‡πà‡∏û‡∏ö"
      ]
    },
    {
      key: "skin_extra",
      title: "7. ‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)",
      emoji: "üß¥",
      bg: "linear-gradient(90deg, rgba(245, 243, 255, 0.98), rgba(221, 214, 254, 1))",
      border: "rgba(139, 92, 246, .35)",
      inputBorder: "rgba(139,92,246,.55)",
      items: ["‡∏à‡∏∏‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏≠‡∏≠‡∏Å", "‡∏ü‡∏Å‡∏ä‡πâ‡∏≥", "‡∏õ‡∏∑‡πâ‡∏ô/‡∏à‡πâ‡∏≥‡πÄ‡∏•‡∏∑‡∏≠‡∏î", "‡πÑ‡∏°‡πà‡∏û‡∏ö"]
    },
    {
      key: "ent",
      title: "8. ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏π ‡∏Ñ‡∏≠ ‡∏à‡∏°‡∏π‡∏Å",
      emoji: "üëÇ",
      bg: "linear-gradient(90deg, rgba(255, 241, 242, 0.95), rgba(254, 226, 226, 1))",
      border: "rgba(248, 113, 113, .35)",
      inputBorder: "rgba(248,113,113,.55)",
      items: ["‡πÄ‡∏à‡πá‡∏ö‡∏Ñ‡∏≠", "‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Å‡∏≥‡πÄ‡∏î‡∏≤‡πÑ‡∏´‡∏•", "‡∏ó‡∏≠‡∏ô‡∏ã‡∏¥‡∏•‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö", "‡πÑ‡∏°‡πà‡∏û‡∏ö"]
    },
    {
      key: "other",
      title: "9. ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
      emoji: "üß™",
      bg: "linear-gradient(90deg, rgba(243, 244, 246, 0.95), rgba(229, 231, 235, 1))",
      border: "rgba(148, 163, 184, .35)",
      inputBorder: "rgba(148,163,184,.6)",
      items: ["‡πÑ‡∏Ç‡πâ Temp > 37.5 ¬∞C", "‡∏≠‡πà‡∏≠‡∏ô‡πÄ‡∏û‡∏•‡∏µ‡∏¢", "‡∏´‡∏ô‡∏≤‡∏ß‡∏™‡∏±‡πà‡∏ô", "‡πÑ‡∏°‡πà‡∏û‡∏ö"]
    }
  ];

  // --------------- ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2) ----------------
  const ORGANS = [
    "‡∏ï‡πà‡∏≠‡∏°‡∏ô‡πâ‡∏≥‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡πÇ‡∏ï",
    "‡∏°‡πâ‡∏≤‡∏°‡πÇ‡∏ï",
    "‡∏ï‡∏±‡∏ö‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö",
    "‡πÑ‡∏ï‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö",
    "‡πÑ‡∏ï‡∏ß‡∏≤‡∏¢",
    "‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏±‡∏ß‡πÉ‡∏à‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö",
    "‡∏ï‡πà‡∏≠‡∏°‡πÑ‡∏ó‡∏£‡∏≠‡∏¢‡∏î‡πå‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö",
    "‡∏õ‡∏≠‡∏î‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö",
    "‡πÑ‡∏°‡πà‡∏û‡∏ö"
  ];

  function renderPage2() {
    const root = document.getElementById("page2");
    if (!root) return;

    const d = window.drugAllergyData.page2;

    // ‡∏ä‡∏±‡πâ‡∏ô‡∏ô‡∏≠‡∏Å‡∏™‡∏∏‡∏î (‡∏Ñ‡∏á‡πÇ‡∏ó‡∏ô‡∏ä‡∏°‡∏û‡∏π ‡πÅ‡∏ï‡πà‡∏°‡∏∑‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏ô‡∏¥‡∏î)
    root.innerHTML = `
      <div class="p2-wrapper" style="
        background: radial-gradient(circle at top, #ffd5da 0%, #ffccd3 35%, #ffeef1 90%);
        border: 1px solid rgba(255,92,120,.3);
        border-radius: 1.4rem;
        padding: 1.3rem 1.4rem 2.4rem;
        box-shadow: 0 12px 30px rgba(255,120,140,.15);
      ">
        
        <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1 -->
        <section class="p2-section" style="
          background: rgba(255, 241, 242, 0.95);
          border: 1px solid rgba(190,18,60,.25);
          border-radius: 1.05rem;
          padding: 1.05rem 1rem 1.1rem;
          margin-bottom: 1.2rem;
        ">
          <h2 style="display:flex;align-items:center;gap:.5rem;font-size:1.05rem;font-weight:700;color:#be123c;margin:0 0 1rem;">
            <span>ü©∫</span>
            <span>‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£/‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡πÜ</span>
          </h2>

          ${FEATURE_GROUPS.map(group => {
            const selected = d[group.key] || {};
            return `
              <div class="p2-block" style="
                background: ${group.bg};
                border: 1px solid ${group.border};
                border-radius: .9rem;
                padding: .75rem .8rem .4rem;
                margin-bottom: .65rem;
              ">
                <h3 style="display:flex;align-items:center;gap:.45rem;font-size:.9rem;font-weight:700;color:#7f1d1d;margin:0 0 .55rem;">
                  <span>${group.emoji}</span>
                  <span>${group.title}</span>
                </h3>
                <div class="p2-list" style="display:flex;flex-direction:column;gap:.45rem;">
                  ${group.items
                    .map((txt, idx) => {
                      const id = `${group.key}_${idx}`;
                      const checked = selected[txt]?.checked ? "checked" : "";
                      const detailVal = selected[txt]?.detail || "";
                      return `
                        <label for="${id}" style="
                          display:flex;
                          gap:.6rem;
                          align-items:flex-start;
                          background: rgba(255, 255, 255, .88);
                          border: 1px solid rgba(255,255,255,.2);
                          border-radius:.7rem;
                          padding:.45rem .55rem .55rem;
                        ">
                          <input type="checkbox" id="${id}" data-group="${group.key}" data-text="${txt}" ${checked} style="margin-top:.25rem;">
                          <div style="flex:1 1 auto;">
                            <div style="font-size:.86rem;color:#1f2937;">${txt}</div>
                            <input type="text"
                                   placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î..."
                                   class="p2-detail"
                                   data-group="${group.key}"
                                   data-text="${txt}"
                                   value="${detailVal}"
                                   style="margin-top:.35rem;width:100%;border:1px solid ${group.inputBorder};border-radius:.5rem;padding:.35rem .5rem;font-size:.78rem;${checked ? "" : "display:none;"};background:rgba(255,255,255,.9);">
                          </div>
                        </label>
                      `;
                    })
                    .join("")}
                </div>
              </div>
            `;
          }).join("")}
        </section>

        <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2 -->
        <section class="p2-section" style="
          background: rgba(250, 232, 255, 0.95);
          border: 1px solid rgba(217,70,239,.3);
          border-radius: 1.05rem;
          padding: 1.05rem 1rem 1.1rem;
        ">
          <h2 style="display:flex;align-items:center;gap:.5rem;font-size:1.05rem;font-weight:700;color:#86198f;margin:0 0 1rem;">
            <span>ü´Ä</span>
            <span>‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥</span>
          </h2>

          <div style="display:flex;flex-direction:column;gap:.5rem;">
            ${ORGANS.map((org, idx) => {
              const id = `org_${idx}`;
              const saved = d.organs && d.organs[org];
              const checked = saved?.checked ? "checked" : "";
              const detailVal = saved?.detail || "";
              return `
                <label for="${id}" style="
                  display:flex;
                  gap:.6rem;
                  align-items:flex-start;
                  background: rgba(255, 255, 255, .9);
                  border: 1px solid rgba(236,72,153,.12);
                  border-radius:.7rem;
                  padding:.45rem .55rem .55rem;
                ">
                  <input type="checkbox" id="${id}" data-org="${org}" ${checked} style="margin-top:.25rem;">
                  <div style="flex:1 1 auto;">
                    <div style="font-size:.86rem;color:#1f2937;">${org}</div>
                    <input type="text"
                           placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î..."
                           class="p2-org-detail"
                           data-org="${org}"
                           value="${detailVal}"
                           style="margin-top:.35rem;width:100%;border:1px solid rgba(236,72,153,.45);border-radius:.5rem;padding:.35rem .5rem;font-size:.78rem;${checked ? "" : "display:none"};background:rgba(255,255,255,.9);">
                  </div>
                </label>
              `;
            }).join("")}
          </div>
        </section>
      </div>
    `;

    // --------- ‡∏ú‡∏π‡∏Å event ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1 ----------
    FEATURE_GROUPS.forEach(group => {
      group.items.forEach((txt, idx) => {
        const cb = document.getElementById(`${group.key}_${idx}`);
        const input = root.querySelector(
          `.p2-detail[data-group="${group.key}"][data-text="${txt}"]`
        );
        if (!cb || !input) return;
        cb.addEventListener("change", () => {
          if (cb.checked) {
            input.style.display = "block";
          } else {
            input.style.display = "none";
            input.value = "";
          }
          savePage2();
        });
        input.addEventListener("input", savePage2);
      });
    });

    // --------- ‡∏ú‡∏π‡∏Å event ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2 ----------
    ORGANS.forEach((org, idx) => {
      const cb = document.getElementById(`org_${idx}`);
      const input = root.querySelector(`.p2-org-detail[data-org="${org}"]`);
      if (!cb || !input) return;
      cb.addEventListener("change", () => {
        if (cb.checked) {
          input.style.display = "block";
        } else {
          input.style.display = "none";
          input.value = "";
        }
        savePage2();
      });
      input.addEventListener("input", savePage2);
    });

    function savePage2() {
      const store = (window.drugAllergyData.page2 =
        window.drugAllergyData.page2 || {});

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≤‡∏Å‡∏≤‡∏£
      FEATURE_GROUPS.forEach(group => {
        const groupObj = {};
        group.items.forEach((txt, idx) => {
          const cb = document.getElementById(`${group.key}_${idx}`);
          const input = root.querySelector(
            `.p2-detail[data-group="${group.key}"][data-text="${txt}"]`
          );
          if (!cb || !input) return;
          if (cb.checked || input.value.trim() !== "") {
            groupObj[txt] = {
              checked: cb.checked,
              detail: input.value.trim()
            };
          }
        });
        store[group.key] = groupObj;
      });

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞
      const organObj = {};
      ORGANS.forEach((org, idx) => {
        const cb = document.getElementById(`org_${idx}`);
        const input = root.querySelector(
          `.p2-org-detail[data-org="${org}"]`
        );
        if (!cb || !input) return;
        if (cb.checked || input.value.trim() !== "") {
          organObj[org] = {
            checked: cb.checked,
            detail: input.value.trim()
          };
        }
      });
      store.organs = organObj;

      if (window.saveDrugAllergyData) window.saveDrugAllergyData();
    }
  }

  // export
  window.renderPage2 = renderPage2;
})();
