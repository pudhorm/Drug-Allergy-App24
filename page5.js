// page5.js
// ‡∏´‡∏ô‡πâ‡∏≤ 5: Timeline ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ‡∏¢‡∏≤
// ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏Å‡πâ 3 ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å:
// 1) ‡πÅ‡∏Å‡∏ô X ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏£‡∏¥‡∏á‡πÜ (‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô +1 ‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß)
// 2) ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏¢‡∏≤ / ‡∏ß‡∏±‡∏ô‡∏´‡∏≤‡∏¢ -> ‡πÅ‡∏ñ‡∏ö‡∏¢‡∏≤‡∏ß‡∏ñ‡∏∂‡∏á "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ" (‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏û)
// 3) ‡∏õ‡∏•‡∏≤‡∏¢‡πÅ‡∏ñ‡∏ö‡∏ã‡πâ‡∏≤‡∏¢-‡∏Ç‡∏ß‡∏≤ ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏õ‡πä‡∏∞

(function () {
  const DAY_MS = 24 * 60 * 60 * 1000;

  // ‡πÅ‡∏õ‡∏•‡∏á "24/11/2025" -> Date(2025,10,24)
  function parseThaiDate(str) {
    if (!str || str === "‡∏ß‡∏ß/‡∏î‡∏î/‡∏õ‡∏õ‡∏õ‡∏õ") return null;
    const parts = str.split("/");
    if (parts.length !== 3) return null;
    const d = parseInt(parts[0], 10);
    const m = parseInt(parts[1], 10) - 1;
    const y = parseInt(parts[2], 10);
    if (Number.isNaN(d) || Number.isNaN(m) || Number.isNaN(y)) return null;
    const dt = new Date(y, m, d);
    dt.setHours(0, 0, 0, 0);
    return dt;
  }

  // ‡πÅ‡∏õ‡∏•‡∏á Date -> 2025-11-29 ‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ‡πÅ‡∏õ‡∏∞‡∏ö‡∏ô‡πÅ‡∏ñ‡∏ö
  function formatISO(d) {
    const y = d.getFullYear();
    const m = String(d.getMonth() + 1).padStart(2, "0");
    const dd = String(d.getDate()).padStart(2, "0");
    return `${y}-${m}-${dd}`;
  }

  // ‡∏™‡πà‡∏ß‡∏ô HTML ‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤ 5
  function renderPage5() {
    const page = document.getElementById("page5");
    if (!page) return;

    page.innerHTML = `
      <div class="p5-wrapper" style="background: radial-gradient(circle at top,#fff7c7 0%,#fde7ff 35%,#ffffff 70%); border:1px solid rgba(255,255,255,.4); border-radius:1.6rem; padding:1.2rem 1.2rem 6.2rem; box-shadow:0 18px 35px rgba(248,113,113,.04); position:relative;">
        <div class="p5-glitter-layer"></div>

        <!-- ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏¢‡∏≤ -->
        <div class="tl-section tl-bg-soft" style="margin-bottom:1rem; position:relative;">
          <div class="tl-head">
            <h2 style="margin:0; font-size:1.3rem; color:#0f172a;">‡∏¢‡∏≤</h2>
            <button id="tl-add-drug" class="btn-green-solid" style="min-width:150px; display:flex; gap:.4rem; justify-content:center; align-items:center;">
              <span>+ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏≤‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡∏°‡πà</span>
            </button>
          </div>
          <div id="tl-drug-list" style="display:flex; flex-direction:column; gap:.7rem;"></div>
        </div>

        <!-- ‡∏Å‡∏•‡πà‡∏≠‡∏á ADR -->
        <div class="tl-section tl-bg-soft-red" style="margin-bottom:1rem; position:relative;">
          <div class="tl-head">
            <h2 style="margin:0; font-size:1.3rem; color:#991b1b;">ADR (Adverse Drug Reaction)</h2>
            <button id="tl-add-adr" class="btn-red-solid" style="min-width:150px; display:flex; gap:.4rem; justify-content:center; align-items:center;">
              <span>+ ‡πÄ‡∏û‡∏¥‡πà‡∏° ADR</span>
            </button>
          </div>
          <div id="tl-adr-list" style="display:flex; flex-direction:column; gap:.7rem;"></div>

          <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á timeline -->
          <div class="tl-actions-under-adr" style="margin-top:.6rem;">
            <button id="tl-build" class="btn-blue-solid" style="display:flex; gap:.4rem; align-items:center;">
              <span style="font-size:1.1rem;">‚ñ∂</span>
              <span>‡∏™‡∏£‡πâ‡∏≤‡∏á Timeline</span>
            </button>
          </div>
        </div>

        <!-- ‡∏ú‡∏• Timeline -->
        <div class="tl-section" style="position:relative;">
          <h2 style="margin:0 0 .6rem; font-size:1.4rem; color:#111827;">Visual Timeline</h2>
          <div id="tl-scroll" class="tl-scroll hidden" style="min-height:160px;">
            <div id="tl-ticks" class="tl-ticks"></div>
            <div id="tl-canvas" class="tl-canvas"></div>
          </div>
        </div>

        <!-- ‡∏õ‡∏∏‡πà‡∏°‡∏•‡πà‡∏≤‡∏á -->
        <div class="tl-bottom-actions" style="position:sticky; bottom:0; gap:.6rem; margin-top:1.2rem;">
          <button id="tl-print" class="btn-green-solid" style="width:100%; display:flex; gap:.4rem; justify-content:center; align-items:center;">
            üñ®Ô∏è Print / PDF
          </button>
          <button id="tl-save-next" class="btn-purple-solid" style="width:100%;">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ 6</button>
          <button id="tl-clear" class="btn-red-solid" style="width:100%;">üóë ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ</button>
        </div>
      </div>
    `;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á 1 ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    addDrugRow();
    addAdrRow();

    // ‡∏ú‡∏π‡∏Å‡∏õ‡∏∏‡πà‡∏°
    document.getElementById("tl-add-drug").addEventListener("click", addDrugRow);
    document.getElementById("tl-add-adr").addEventListener("click", addAdrRow);
    document.getElementById("tl-build").addEventListener("click", buildTimeline);
    document.getElementById("tl-clear").addEventListener("click", clearPage5);
    document.getElementById("tl-print").addEventListener("click", () => window.print());
    document.getElementById("tl-save-next").addEventListener("click", () => {
      // ‡πÅ‡∏Ñ‡πà‡∏™‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ 6
      const btn = document.querySelector('.tabs button[data-target="page6"]');
      if (btn) btn.click();
    });
  }

  // ====== ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á input ‡∏Ç‡∏≠‡∏á "‡∏¢‡∏≤" ======
  function addDrugRow() {
    const list = document.getElementById("tl-drug-list");
    const wrap = document.createElement("div");
    wrap.className = "tl-card";
    wrap.style.position = "relative";
    wrap.innerHTML = `
      <div style="display:flex; gap:1rem; align-items:flex-start;">
        <div style="flex:1 1 auto;">
          <label>‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤</label>
          <input type="text" class="tl-drug-name" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏≤" style="width:100%; border:1px solid rgba(15,23,42,.1); border-radius:.8rem; padding:.35rem .55rem;" />
        </div>
        <div style="width:92px; align-self:stretch; background:rgba(248,113,113,.12); border-radius:.8rem; display:flex; justify-content:center; align-items:center;">
          <button class="tl-del" style="border:none; background:transparent; font-weight:700; color:#b91c1c; cursor:pointer;">‡∏•‡∏ö</button>
        </div>
      </div>
      <div style="display:flex; gap:1rem; margin-top:.6rem; flex-wrap:wrap;">
        <div>
          <label>‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏¢‡∏≤</label><br/>
          <input type="date" class="tl-drug-start" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
        <div>
          <label>‡πÄ‡∏ß‡∏•‡∏≤</label><br/>
          <input type="time" class="tl-drug-start-time" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
        <div>
          <label>‡∏´‡∏¢‡∏∏‡∏î‡∏¢‡∏≤</label><br/>
          <input type="date" class="tl-drug-end" placeholder="‡∏ß‡∏ß/‡∏î‡∏î/‡∏õ‡∏õ‡∏õ‡∏õ" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
        <div>
          <label>‡πÄ‡∏ß‡∏•‡∏≤</label><br/>
          <input type="time" class="tl-drug-end-time" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
      </div>
    `;
    // ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
    wrap.querySelector(".tl-del").addEventListener("click", () => {
      wrap.remove();
    });
    list.appendChild(wrap);
  }

  // ====== ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á input ‡∏Ç‡∏≠‡∏á "ADR" ======
  function addAdrRow() {
    const list = document.getElementById("tl-adr-list");
    const wrap = document.createElement("div");
    wrap.className = "tl-card";
    wrap.style.position = "relative";
    wrap.innerHTML = `
      <div style="display:flex; gap:1rem; align-items:flex-start;">
        <div style="flex:1 1 auto;">
          <label>‡∏≠‡∏≤‡∏Å‡∏≤‡∏£</label>
          <input type="text" class="tl-adr-name" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ú‡∏∑‡πà‡∏ô, ‡∏Ñ‡∏±‡∏ô, ‡∏ö‡∏ß‡∏°" style="width:100%; border:1px solid rgba(15,23,42,.1); border-radius:.8rem; padding:.35rem .55rem;" />
        </div>
        <div style="width:92px; align-self:stretch; background:rgba(254,226,226,.9); border-radius:.8rem; display:flex; justify-content:center; align-items:center;">
          <button class="tl-del" style="border:none; background:transparent; font-weight:700; color:#b91c1c; cursor:pointer;">‡∏•‡∏ö</button>
        </div>
      </div>
      <div style="display:flex; gap:1rem; margin-top:.6rem; flex-wrap:wrap;">
        <div>
          <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î</label><br/>
          <input type="date" class="tl-adr-start" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
        <div>
          <label>‡πÄ‡∏ß‡∏•‡∏≤</label><br/>
          <input type="time" class="tl-adr-start-time" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
        <div>
          <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢</label><br/>
          <input type="date" class="tl-adr-end" placeholder="‡∏ß‡∏ß/‡∏î‡∏î/‡∏õ‡∏õ‡∏õ‡∏õ" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
        <div>
          <label>‡πÄ‡∏ß‡∏•‡∏≤</label><br/>
          <input type="time" class="tl-adr-end-time" style="border:1px solid rgba(15,23,42,.1); border-radius:.6rem; padding:.25rem .45rem;" />
        </div>
      </div>
    `;
    wrap.querySelector(".tl-del").addEventListener("click", () => {
      wrap.remove();
    });
    list.appendChild(wrap);
  }

  // ====== ‡∏õ‡∏∏‡πà‡∏°‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ======
  function clearPage5() {
    document.getElementById("tl-drug-list").innerHTML = "";
    document.getElementById("tl-adr-list").innerHTML = "";
    addDrugRow();
    addAdrRow();
    document.getElementById("tl-scroll").classList.add("hidden");
  }

  // ====== ‡∏™‡∏£‡πâ‡∏≤‡∏á Timeline ======
  function buildTimeline() {
    const today = new Date();
    today.setHours(0, 0, 0, 0);

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡∏¢‡∏≤
    const drugRows = Array.from(document.querySelectorAll("#tl-drug-list .tl-card"));
    const drugs = [];
    for (const row of drugRows) {
      const name = row.querySelector(".tl-drug-name").value.trim() || "‡∏¢‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà 1";
      const startStr = row.querySelector(".tl-drug-start").value;
      const endStr = row.querySelector(".tl-drug-end").value;
      const start = startStr ? new Date(startStr) : null;
      let end = endStr ? new Date(endStr) : null;

      if (!start) continue; // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏° -> ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏ä‡∏ß‡πå‡πÉ‡∏ô timeline

      start.setHours(0, 0, 0, 0);

      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î -> ‡πÉ‡∏ä‡πâ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢ (‡∏Ñ‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏±‡πà‡∏á)
      if (!end) {
        end = new Date(today.getTime());
      } else {
        end.setHours(0, 0, 0, 0);
      }

      // ‡∏Å‡∏±‡∏ô‡πÑ‡∏ß‡πâ ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏™‡πà‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°
      if (end < start) end = new Date(start.getTime());

      drugs.push({ name, start, end });
    }

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡∏≠‡∏á ADR
    const adrRows = Array.from(document.querySelectorAll("#tl-adr-list .tl-card"));
    const adrs = [];
    for (const row of adrRows) {
      const name = row.querySelector(".tl-adr-name").value.trim() || "ADR";
      const startStr = row.querySelector(".tl-adr-start").value;
      const endStr = row.querySelector(".tl-adr-end").value;
      const start = startStr ? new Date(startStr) : null;
      let end = endStr ? new Date(endStr) : null;

      if (!start) continue;

      start.setHours(0, 0, 0, 0);

      if (!end) {
        end = new Date(today.getTime());
      } else {
        end.setHours(0, 0, 0, 0);
      }

      if (end < start) end = new Date(start.getTime());

      adrs.push({ name, start, end });
    }

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏¢ -> ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏ä‡∏ß‡πå
    if (drugs.length === 0 && adrs.length === 0) {
      document.getElementById("tl-scroll").classList.add("hidden");
      return;
    }

    // ‡∏´‡∏≤ "‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏≠‡∏á‡πÅ‡∏Å‡∏ô X" = ‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
    let axisStart = null;
    for (const d of drugs) {
      if (!axisStart || d.start < axisStart) axisStart = d.start;
    }
    for (const a of adrs) {
      if (!axisStart || a.start < axisStart) axisStart = a.start;
    }
    // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏¢
    if (!axisStart) axisStart = new Date(today.getTime());

    // ‡∏´‡∏≤ "‡∏ß‡∏±‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡πÅ‡∏Å‡∏ô X" = max(‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î, ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ)
    let axisEnd = new Date(today.getTime());
    for (const d of drugs) {
      if (d.end > axisEnd) axisEnd = d.end;
    }
    for (const a of adrs) {
      if (a.end > axisEnd) axisEnd = a.end;
    }

    axisStart.setHours(0, 0, 0, 0);
    axisEnd.setHours(0, 0, 0, 0);

    // ‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ö‡∏ô‡πÅ‡∏Å‡∏ô X (‡πÅ‡∏ö‡∏ö inclusive) ‡πÄ‡∏ä‡πà‡∏ô 26 ‚Üí 29 = 4 ‡∏ß‡∏±‡∏ô
    const totalDays = Math.floor((axisEnd - axisStart) / DAY_MS) + 1;
    const DAY_WIDTH = 110; // ‡∏Å‡∏ß‡πâ‡∏≤‡∏á 110px ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ä‡∏±‡∏î

    const ticks = document.getElementById("tl-ticks");
    const canvas = document.getElementById("tl-canvas");
    const scroll = document.getElementById("tl-scroll");

    ticks.innerHTML = "";
    canvas.innerHTML = "";

    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡∏ô‡∏ß‡∏≤‡∏™‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô
    const totalWidth = totalDays * DAY_WIDTH + 140;
    ticks.style.width = totalWidth + "px";
    canvas.style.width = totalWidth + "px";

    // ‡∏ß‡∏≤‡∏î‡∏ß‡∏±‡∏ô‡∏ö‡∏ô‡πÅ‡∏Å‡∏ô X (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å‡πÄ‡∏•‡∏¢ ‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß)
    for (let i = 0; i < totalDays; i++) {
      const d = new Date(axisStart.getTime() + i * DAY_MS);
      const thDate = d.toLocaleDateString("th-TH", {
        day: "numeric",
        month: "short",
      });
      const div = document.createElement("div");
      div.className = "tl-tick";
      div.style.left = i * DAY_WIDTH + 120 + "px"; // 120px ‡πÄ‡∏ß‡πâ‡∏ô‡∏ã‡πâ‡∏≤‡∏¢‡πÉ‡∏´‡πâ Y label
      div.textContent = thDate;
      ticks.appendChild(div);
    }

    // ‡∏°‡∏µ‡∏Å‡∏µ‡πà‡πÅ‡∏ñ‡∏ß? ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 2 (‡∏¢‡∏≤ / ADR)
    const trackWrap = document.createElement("div");
    trackWrap.style.position = "relative";
    trackWrap.style.minHeight = "120px";

    // ====== ‡πÅ‡∏ñ‡∏ß "‡∏¢‡∏≤:" ======
    const drugRow = document.createElement("div");
    drugRow.className = "tl-row";
    drugRow.style.gridTemplateColumns = "110px 1fr";
    drugRow.innerHTML = `
      <div class="tl-ylabel" style="color:#0f766e; font-weight:700;">‡∏¢‡∏≤:</div>
      <div class="tl-track" style="position:relative; height:50px;"></div>
    `;
    trackWrap.appendChild(drugRow);

    // ‡∏ß‡∏≤‡∏î‡πÅ‡∏ñ‡∏ö‡∏¢‡∏≤
    const drugTrack = drugRow.querySelector(".tl-track");
    drugs.forEach((d) => {
      const startOffset = Math.floor((d.start - axisStart) / DAY_MS); // 0 = ‡∏ß‡∏±‡∏ô‡πÅ‡∏£‡∏Å
      const endOffset = Math.floor((d.end - axisStart) / DAY_MS);
      const bar = document.createElement("div");
      bar.className = "tl-bar drug";
      // ‡∏Å‡∏ß‡πâ‡∏≤‡∏á = (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏à‡∏£‡∏¥‡∏á + 1) * dayWidth
      const widthPx = (endOffset - startOffset + 1) * DAY_WIDTH - 12;
      bar.style.left = startOffset * DAY_WIDTH + 120 + "px"; // +120 ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡πÅ‡∏Å‡∏ô
      bar.style.width = widthPx + "px";
      bar.textContent = `${d.name} (${formatISO(d.start)})`;
      drugTrack.appendChild(bar);
    });

    // ====== ‡πÅ‡∏ñ‡∏ß "ADR:" ======
    const adrRow = document.createElement("div");
    adrRow.className = "tl-row";
    adrRow.style.gridTemplateColumns = "110px 1fr";
    adrRow.innerHTML = `
      <div class="tl-ylabel" style="color:#b91c1c; font-weight:700;">ADR:</div>
      <div class="tl-track" style="position:relative; height:50px;"></div>
    `;
    trackWrap.appendChild(adrRow);

    const adrTrack = adrRow.querySelector(".tl-track");
    adrs.forEach((a) => {
      const startOffset = Math.floor((a.start - axisStart) / DAY_MS);
      const endOffset = Math.floor((a.end - axisStart) / DAY_MS);
      const bar = document.createElement("div");
      bar.className = "tl-bar adr";
      const widthPx = (endOffset - startOffset + 1) * DAY_WIDTH - 12;
      bar.style.left = startOffset * DAY_WIDTH + 120 + "px";
      bar.style.width = widthPx + "px";
      bar.textContent = `${a.name} (${formatISO(a.start)})`;
      adrTrack.appendChild(bar);
    });

    canvas.appendChild(trackWrap);

    // ‡πÇ‡∏ä‡∏ß‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á timeline
    scroll.classList.remove("hidden");
  }

  // ‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤ html ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å
  window.renderPage5 = renderPage5;
})();
